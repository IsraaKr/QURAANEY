#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QURAANEY.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MY_QURAAN")]
	public partial class DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertT_DEFULT_THWABET(T_DEFULT_THWABET instance);
    partial void UpdateT_DEFULT_THWABET(T_DEFULT_THWABET instance);
    partial void DeleteT_DEFULT_THWABET(T_DEFULT_THWABET instance);
    partial void InsertT_PERS_RATE_KEEP_CHANGE(T_PERS_RATE_KEEP_CHANGE instance);
    partial void UpdateT_PERS_RATE_KEEP_CHANGE(T_PERS_RATE_KEEP_CHANGE instance);
    partial void DeleteT_PERS_RATE_KEEP_CHANGE(T_PERS_RATE_KEEP_CHANGE instance);
    partial void InsertT_PERS_FAIL(T_PERS_FAIL instance);
    partial void UpdateT_PERS_FAIL(T_PERS_FAIL instance);
    partial void DeleteT_PERS_FAIL(T_PERS_FAIL instance);
    partial void InsertT_PERS_RATE_KEEP(T_PERS_RATE_KEEP instance);
    partial void UpdateT_PERS_RATE_KEEP(T_PERS_RATE_KEEP instance);
    partial void DeleteT_PERS_RATE_KEEP(T_PERS_RATE_KEEP instance);
    partial void InsertT_PERS_STATE(T_PERS_STATE instance);
    partial void UpdateT_PERS_STATE(T_PERS_STATE instance);
    partial void DeleteT_PERS_STATE(T_PERS_STATE instance);
    partial void InsertT_PERS_STATE_CHANGE(T_PERS_STATE_CHANGE instance);
    partial void UpdateT_PERS_STATE_CHANGE(T_PERS_STATE_CHANGE instance);
    partial void DeleteT_PERS_STATE_CHANGE(T_PERS_STATE_CHANGE instance);
    partial void InsertT_PERS_TYPE(T_PERS_TYPE instance);
    partial void UpdateT_PERS_TYPE(T_PERS_TYPE instance);
    partial void DeleteT_PERS_TYPE(T_PERS_TYPE instance);
    partial void InsertT_PERS_TYPE_CHANGE(T_PERS_TYPE_CHANGE instance);
    partial void UpdateT_PERS_TYPE_CHANGE(T_PERS_TYPE_CHANGE instance);
    partial void DeleteT_PERS_TYPE_CHANGE(T_PERS_TYPE_CHANGE instance);
    partial void InsertT_PERSONE(T_PERSONE instance);
    partial void UpdateT_PERSONE(T_PERSONE instance);
    partial void DeleteT_PERSONE(T_PERSONE instance);
    partial void InsertT_SOURA(T_SOURA instance);
    partial void UpdateT_SOURA(T_SOURA instance);
    partial void DeleteT_SOURA(T_SOURA instance);
    partial void InsertT_SOURA_EVALUATION(T_SOURA_EVALUATION instance);
    partial void UpdateT_SOURA_EVALUATION(T_SOURA_EVALUATION instance);
    partial void DeleteT_SOURA_EVALUATION(T_SOURA_EVALUATION instance);
    partial void InsertT_SOURA_KEEP(T_SOURA_KEEP instance);
    partial void UpdateT_SOURA_KEEP(T_SOURA_KEEP instance);
    partial void DeleteT_SOURA_KEEP(T_SOURA_KEEP instance);
    partial void InsertT_SOURA_KEEP_TYPE(T_SOURA_KEEP_TYPE instance);
    partial void UpdateT_SOURA_KEEP_TYPE(T_SOURA_KEEP_TYPE instance);
    partial void DeleteT_SOURA_KEEP_TYPE(T_SOURA_KEEP_TYPE instance);
    partial void InsertT_TEST(T_TEST instance);
    partial void UpdateT_TEST(T_TEST instance);
    partial void DeleteT_TEST(T_TEST instance);
    partial void InsertT_USER(T_USER instance);
    partial void UpdateT_USER(T_USER instance);
    partial void DeleteT_USER(T_USER instance);
    partial void InsertT_USERS_TYPE(T_USERS_TYPE instance);
    partial void UpdateT_USERS_TYPE(T_USERS_TYPE instance);
    partial void DeleteT_USERS_TYPE(T_USERS_TYPE instance);
    #endregion
		
		public DBDataContext() : 
				base(global::QURAANEY.Properties.Settings.Default.MY_QURAANConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<T_DEFULT_THWABET> T_DEFULT_THWABETs
		{
			get
			{
				return this.GetTable<T_DEFULT_THWABET>();
			}
		}
		
		public System.Data.Linq.Table<T_PERS_RATE_KEEP_CHANGE> T_PERS_RATE_KEEP_CHANGEs
		{
			get
			{
				return this.GetTable<T_PERS_RATE_KEEP_CHANGE>();
			}
		}
		
		public System.Data.Linq.Table<T_PERS_FAIL> T_PERS_FAILs
		{
			get
			{
				return this.GetTable<T_PERS_FAIL>();
			}
		}
		
		public System.Data.Linq.Table<T_PERS_RATE_KEEP> T_PERS_RATE_KEEPs
		{
			get
			{
				return this.GetTable<T_PERS_RATE_KEEP>();
			}
		}
		
		public System.Data.Linq.Table<T_PERS_STATE> T_PERS_STATEs
		{
			get
			{
				return this.GetTable<T_PERS_STATE>();
			}
		}
		
		public System.Data.Linq.Table<T_PERS_STATE_CHANGE> T_PERS_STATE_CHANGEs
		{
			get
			{
				return this.GetTable<T_PERS_STATE_CHANGE>();
			}
		}
		
		public System.Data.Linq.Table<T_PERS_TYPE> T_PERS_TYPEs
		{
			get
			{
				return this.GetTable<T_PERS_TYPE>();
			}
		}
		
		public System.Data.Linq.Table<T_PERS_TYPE_CHANGE> T_PERS_TYPE_CHANGEs
		{
			get
			{
				return this.GetTable<T_PERS_TYPE_CHANGE>();
			}
		}
		
		public System.Data.Linq.Table<T_PERSONE> T_PERSONEs
		{
			get
			{
				return this.GetTable<T_PERSONE>();
			}
		}
		
		public System.Data.Linq.Table<T_SOURA> T_SOURAs
		{
			get
			{
				return this.GetTable<T_SOURA>();
			}
		}
		
		public System.Data.Linq.Table<T_SOURA_EVALUATION> T_SOURA_EVALUATIONs
		{
			get
			{
				return this.GetTable<T_SOURA_EVALUATION>();
			}
		}
		
		public System.Data.Linq.Table<T_SOURA_KEEP> T_SOURA_KEEPs
		{
			get
			{
				return this.GetTable<T_SOURA_KEEP>();
			}
		}
		
		public System.Data.Linq.Table<T_SOURA_KEEP_TYPE> T_SOURA_KEEP_TYPEs
		{
			get
			{
				return this.GetTable<T_SOURA_KEEP_TYPE>();
			}
		}
		
		public System.Data.Linq.Table<T_TEST> T_TESTs
		{
			get
			{
				return this.GetTable<T_TEST>();
			}
		}
		
		public System.Data.Linq.Table<T_USER> T_USERs
		{
			get
			{
				return this.GetTable<T_USER>();
			}
		}
		
		public System.Data.Linq.Table<T_USERS_TYPE> T_USERS_TYPEs
		{
			get
			{
				return this.GetTable<T_USERS_TYPE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_DEFULT_THWABET")]
	public partial class T_DEFULT_THWABET : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _value;
		
		private System.Nullable<int> _value_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void Onvalue_idChanging(System.Nullable<int> value);
    partial void Onvalue_idChanged();
    #endregion
		
		public T_DEFULT_THWABET()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(MAX)")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value_id", DbType="Int")]
		public System.Nullable<int> value_id
		{
			get
			{
				return this._value_id;
			}
			set
			{
				if ((this._value_id != value))
				{
					this.Onvalue_idChanging(value);
					this.SendPropertyChanging();
					this._value_id = value;
					this.SendPropertyChanged("value_id");
					this.Onvalue_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_PERS_RATE_KEEP_CHANGE")]
	public partial class T_PERS_RATE_KEEP_CHANGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _pers_id;
		
		private System.Nullable<int> _rate_id;
		
		private System.Nullable<System.DateTime> _change_date;
		
		private EntityRef<T_PERS_RATE_KEEP> _T_PERS_RATE_KEEP;
		
		private EntityRef<T_PERSONE> _T_PERSONE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpers_idChanging(System.Nullable<int> value);
    partial void Onpers_idChanged();
    partial void Onrate_idChanging(System.Nullable<int> value);
    partial void Onrate_idChanged();
    partial void Onchange_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onchange_dateChanged();
    #endregion
		
		public T_PERS_RATE_KEEP_CHANGE()
		{
			this._T_PERS_RATE_KEEP = default(EntityRef<T_PERS_RATE_KEEP>);
			this._T_PERSONE = default(EntityRef<T_PERSONE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pers_id", DbType="Int")]
		public System.Nullable<int> pers_id
		{
			get
			{
				return this._pers_id;
			}
			set
			{
				if ((this._pers_id != value))
				{
					if (this._T_PERSONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpers_idChanging(value);
					this.SendPropertyChanging();
					this._pers_id = value;
					this.SendPropertyChanged("pers_id");
					this.Onpers_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rate_id", DbType="Int")]
		public System.Nullable<int> rate_id
		{
			get
			{
				return this._rate_id;
			}
			set
			{
				if ((this._rate_id != value))
				{
					if (this._T_PERS_RATE_KEEP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrate_idChanging(value);
					this.SendPropertyChanging();
					this._rate_id = value;
					this.SendPropertyChanged("rate_id");
					this.Onrate_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_change_date", DbType="Date")]
		public System.Nullable<System.DateTime> change_date
		{
			get
			{
				return this._change_date;
			}
			set
			{
				if ((this._change_date != value))
				{
					this.Onchange_dateChanging(value);
					this.SendPropertyChanging();
					this._change_date = value;
					this.SendPropertyChanged("change_date");
					this.Onchange_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PERS_RATE_KEEP_T_PERS_RATE_KEEP_CHANGE", Storage="_T_PERS_RATE_KEEP", ThisKey="rate_id", OtherKey="id", IsForeignKey=true)]
		public T_PERS_RATE_KEEP T_PERS_RATE_KEEP
		{
			get
			{
				return this._T_PERS_RATE_KEEP.Entity;
			}
			set
			{
				T_PERS_RATE_KEEP previousValue = this._T_PERS_RATE_KEEP.Entity;
				if (((previousValue != value) 
							|| (this._T_PERS_RATE_KEEP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_PERS_RATE_KEEP.Entity = null;
						previousValue.T_PERS_RATE_KEEP_CHANGEs.Remove(this);
					}
					this._T_PERS_RATE_KEEP.Entity = value;
					if ((value != null))
					{
						value.T_PERS_RATE_KEEP_CHANGEs.Add(this);
						this._rate_id = value.id;
					}
					else
					{
						this._rate_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_PERS_RATE_KEEP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PERSONE_T_PERS_RATE_KEEP_CHANGE", Storage="_T_PERSONE", ThisKey="pers_id", OtherKey="id", IsForeignKey=true)]
		public T_PERSONE T_PERSONE
		{
			get
			{
				return this._T_PERSONE.Entity;
			}
			set
			{
				T_PERSONE previousValue = this._T_PERSONE.Entity;
				if (((previousValue != value) 
							|| (this._T_PERSONE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_PERSONE.Entity = null;
						previousValue.T_PERS_RATE_KEEP_CHANGEs.Remove(this);
					}
					this._T_PERSONE.Entity = value;
					if ((value != null))
					{
						value.T_PERS_RATE_KEEP_CHANGEs.Add(this);
						this._pers_id = value.id;
					}
					else
					{
						this._pers_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_PERSONE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_PERS_FAIL")]
	public partial class T_PERS_FAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _pers_id;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _reson;
		
		private EntityRef<T_PERSONE> _T_PERSONE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpers_idChanging(System.Nullable<int> value);
    partial void Onpers_idChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnresonChanging(string value);
    partial void OnresonChanged();
    #endregion
		
		public T_PERS_FAIL()
		{
			this._T_PERSONE = default(EntityRef<T_PERSONE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pers_id", DbType="Int")]
		public System.Nullable<int> pers_id
		{
			get
			{
				return this._pers_id;
			}
			set
			{
				if ((this._pers_id != value))
				{
					if (this._T_PERSONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpers_idChanging(value);
					this.SendPropertyChanging();
					this._pers_id = value;
					this.SendPropertyChanged("pers_id");
					this.Onpers_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reson", DbType="NVarChar(MAX)")]
		public string reson
		{
			get
			{
				return this._reson;
			}
			set
			{
				if ((this._reson != value))
				{
					this.OnresonChanging(value);
					this.SendPropertyChanging();
					this._reson = value;
					this.SendPropertyChanged("reson");
					this.OnresonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PERSONE_T_PERS_FAIL", Storage="_T_PERSONE", ThisKey="pers_id", OtherKey="id", IsForeignKey=true)]
		public T_PERSONE T_PERSONE
		{
			get
			{
				return this._T_PERSONE.Entity;
			}
			set
			{
				T_PERSONE previousValue = this._T_PERSONE.Entity;
				if (((previousValue != value) 
							|| (this._T_PERSONE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_PERSONE.Entity = null;
						previousValue.T_PERS_FAILs.Remove(this);
					}
					this._T_PERSONE.Entity = value;
					if ((value != null))
					{
						value.T_PERS_FAILs.Add(this);
						this._pers_id = value.id;
					}
					else
					{
						this._pers_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_PERSONE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_PERS_RATE_KEEP")]
	public partial class T_PERS_RATE_KEEP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<int> _num;
		
		private System.Nullable<int> _rate_in_days;
		
		private EntitySet<T_PERS_RATE_KEEP_CHANGE> _T_PERS_RATE_KEEP_CHANGEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnnumChanging(System.Nullable<int> value);
    partial void OnnumChanged();
    partial void Onrate_in_daysChanging(System.Nullable<int> value);
    partial void Onrate_in_daysChanged();
    #endregion
		
		public T_PERS_RATE_KEEP()
		{
			this._T_PERS_RATE_KEEP_CHANGEs = new EntitySet<T_PERS_RATE_KEEP_CHANGE>(new Action<T_PERS_RATE_KEEP_CHANGE>(this.attach_T_PERS_RATE_KEEP_CHANGEs), new Action<T_PERS_RATE_KEEP_CHANGE>(this.detach_T_PERS_RATE_KEEP_CHANGEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num", DbType="Int")]
		public System.Nullable<int> num
		{
			get
			{
				return this._num;
			}
			set
			{
				if ((this._num != value))
				{
					this.OnnumChanging(value);
					this.SendPropertyChanging();
					this._num = value;
					this.SendPropertyChanged("num");
					this.OnnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rate_in_days", DbType="Int")]
		public System.Nullable<int> rate_in_days
		{
			get
			{
				return this._rate_in_days;
			}
			set
			{
				if ((this._rate_in_days != value))
				{
					this.Onrate_in_daysChanging(value);
					this.SendPropertyChanging();
					this._rate_in_days = value;
					this.SendPropertyChanged("rate_in_days");
					this.Onrate_in_daysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PERS_RATE_KEEP_T_PERS_RATE_KEEP_CHANGE", Storage="_T_PERS_RATE_KEEP_CHANGEs", ThisKey="id", OtherKey="rate_id")]
		public EntitySet<T_PERS_RATE_KEEP_CHANGE> T_PERS_RATE_KEEP_CHANGEs
		{
			get
			{
				return this._T_PERS_RATE_KEEP_CHANGEs;
			}
			set
			{
				this._T_PERS_RATE_KEEP_CHANGEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_PERS_RATE_KEEP_CHANGEs(T_PERS_RATE_KEEP_CHANGE entity)
		{
			this.SendPropertyChanging();
			entity.T_PERS_RATE_KEEP = this;
		}
		
		private void detach_T_PERS_RATE_KEEP_CHANGEs(T_PERS_RATE_KEEP_CHANGE entity)
		{
			this.SendPropertyChanging();
			entity.T_PERS_RATE_KEEP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_PERS_STATE")]
	public partial class T_PERS_STATE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<T_PERS_STATE_CHANGE> _T_PERS_STATE_CHANGEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public T_PERS_STATE()
		{
			this._T_PERS_STATE_CHANGEs = new EntitySet<T_PERS_STATE_CHANGE>(new Action<T_PERS_STATE_CHANGE>(this.attach_T_PERS_STATE_CHANGEs), new Action<T_PERS_STATE_CHANGE>(this.detach_T_PERS_STATE_CHANGEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PERS_STATE_T_PERS_STATE_CHANGE", Storage="_T_PERS_STATE_CHANGEs", ThisKey="id", OtherKey="state_id")]
		public EntitySet<T_PERS_STATE_CHANGE> T_PERS_STATE_CHANGEs
		{
			get
			{
				return this._T_PERS_STATE_CHANGEs;
			}
			set
			{
				this._T_PERS_STATE_CHANGEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_PERS_STATE_CHANGEs(T_PERS_STATE_CHANGE entity)
		{
			this.SendPropertyChanging();
			entity.T_PERS_STATE = this;
		}
		
		private void detach_T_PERS_STATE_CHANGEs(T_PERS_STATE_CHANGE entity)
		{
			this.SendPropertyChanging();
			entity.T_PERS_STATE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_PERS_STATE_CHANGE")]
	public partial class T_PERS_STATE_CHANGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _state_id;
		
		private int _pers_id;
		
		private System.DateTime _change_date;
		
		private string _pers_id_deside;
		
		private EntityRef<T_PERS_STATE> _T_PERS_STATE;
		
		private EntityRef<T_PERSONE> _T_PERSONE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onstate_idChanging(int value);
    partial void Onstate_idChanged();
    partial void Onpers_idChanging(int value);
    partial void Onpers_idChanged();
    partial void Onchange_dateChanging(System.DateTime value);
    partial void Onchange_dateChanged();
    partial void Onpers_id_desideChanging(string value);
    partial void Onpers_id_desideChanged();
    #endregion
		
		public T_PERS_STATE_CHANGE()
		{
			this._T_PERS_STATE = default(EntityRef<T_PERS_STATE>);
			this._T_PERSONE = default(EntityRef<T_PERSONE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state_id", DbType="Int NOT NULL")]
		public int state_id
		{
			get
			{
				return this._state_id;
			}
			set
			{
				if ((this._state_id != value))
				{
					if (this._T_PERS_STATE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstate_idChanging(value);
					this.SendPropertyChanging();
					this._state_id = value;
					this.SendPropertyChanged("state_id");
					this.Onstate_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pers_id", DbType="Int NOT NULL")]
		public int pers_id
		{
			get
			{
				return this._pers_id;
			}
			set
			{
				if ((this._pers_id != value))
				{
					if (this._T_PERSONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpers_idChanging(value);
					this.SendPropertyChanging();
					this._pers_id = value;
					this.SendPropertyChanged("pers_id");
					this.Onpers_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_change_date", DbType="Date NOT NULL")]
		public System.DateTime change_date
		{
			get
			{
				return this._change_date;
			}
			set
			{
				if ((this._change_date != value))
				{
					this.Onchange_dateChanging(value);
					this.SendPropertyChanging();
					this._change_date = value;
					this.SendPropertyChanged("change_date");
					this.Onchange_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pers_id_deside", DbType="NVarChar(MAX)")]
		public string pers_id_deside
		{
			get
			{
				return this._pers_id_deside;
			}
			set
			{
				if ((this._pers_id_deside != value))
				{
					this.Onpers_id_desideChanging(value);
					this.SendPropertyChanging();
					this._pers_id_deside = value;
					this.SendPropertyChanged("pers_id_deside");
					this.Onpers_id_desideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PERS_STATE_T_PERS_STATE_CHANGE", Storage="_T_PERS_STATE", ThisKey="state_id", OtherKey="id", IsForeignKey=true)]
		public T_PERS_STATE T_PERS_STATE
		{
			get
			{
				return this._T_PERS_STATE.Entity;
			}
			set
			{
				T_PERS_STATE previousValue = this._T_PERS_STATE.Entity;
				if (((previousValue != value) 
							|| (this._T_PERS_STATE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_PERS_STATE.Entity = null;
						previousValue.T_PERS_STATE_CHANGEs.Remove(this);
					}
					this._T_PERS_STATE.Entity = value;
					if ((value != null))
					{
						value.T_PERS_STATE_CHANGEs.Add(this);
						this._state_id = value.id;
					}
					else
					{
						this._state_id = default(int);
					}
					this.SendPropertyChanged("T_PERS_STATE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PERSONE_T_PERS_STATE_CHANGE", Storage="_T_PERSONE", ThisKey="pers_id", OtherKey="id", IsForeignKey=true)]
		public T_PERSONE T_PERSONE
		{
			get
			{
				return this._T_PERSONE.Entity;
			}
			set
			{
				T_PERSONE previousValue = this._T_PERSONE.Entity;
				if (((previousValue != value) 
							|| (this._T_PERSONE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_PERSONE.Entity = null;
						previousValue.T_PERS_STATE_CHANGEs.Remove(this);
					}
					this._T_PERSONE.Entity = value;
					if ((value != null))
					{
						value.T_PERS_STATE_CHANGEs.Add(this);
						this._pers_id = value.id;
					}
					else
					{
						this._pers_id = default(int);
					}
					this.SendPropertyChanged("T_PERSONE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_PERS_TYPE")]
	public partial class T_PERS_TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<T_PERS_TYPE_CHANGE> _T_PERS_TYPE_CHANGEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public T_PERS_TYPE()
		{
			this._T_PERS_TYPE_CHANGEs = new EntitySet<T_PERS_TYPE_CHANGE>(new Action<T_PERS_TYPE_CHANGE>(this.attach_T_PERS_TYPE_CHANGEs), new Action<T_PERS_TYPE_CHANGE>(this.detach_T_PERS_TYPE_CHANGEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PERS_TYPE_T_PERS_TYPE_CHANGE", Storage="_T_PERS_TYPE_CHANGEs", ThisKey="id", OtherKey="type_id")]
		public EntitySet<T_PERS_TYPE_CHANGE> T_PERS_TYPE_CHANGEs
		{
			get
			{
				return this._T_PERS_TYPE_CHANGEs;
			}
			set
			{
				this._T_PERS_TYPE_CHANGEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_PERS_TYPE_CHANGEs(T_PERS_TYPE_CHANGE entity)
		{
			this.SendPropertyChanging();
			entity.T_PERS_TYPE = this;
		}
		
		private void detach_T_PERS_TYPE_CHANGEs(T_PERS_TYPE_CHANGE entity)
		{
			this.SendPropertyChanging();
			entity.T_PERS_TYPE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_PERS_TYPE_CHANGE")]
	public partial class T_PERS_TYPE_CHANGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _pers_id;
		
		private System.Nullable<int> _type_id;
		
		private System.Nullable<System.DateTime> _change_date;
		
		private EntityRef<T_PERS_TYPE> _T_PERS_TYPE;
		
		private EntityRef<T_PERSONE> _T_PERSONE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpers_idChanging(System.Nullable<int> value);
    partial void Onpers_idChanged();
    partial void Ontype_idChanging(System.Nullable<int> value);
    partial void Ontype_idChanged();
    partial void Onchange_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onchange_dateChanged();
    #endregion
		
		public T_PERS_TYPE_CHANGE()
		{
			this._T_PERS_TYPE = default(EntityRef<T_PERS_TYPE>);
			this._T_PERSONE = default(EntityRef<T_PERSONE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pers_id", DbType="Int")]
		public System.Nullable<int> pers_id
		{
			get
			{
				return this._pers_id;
			}
			set
			{
				if ((this._pers_id != value))
				{
					if (this._T_PERSONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpers_idChanging(value);
					this.SendPropertyChanging();
					this._pers_id = value;
					this.SendPropertyChanged("pers_id");
					this.Onpers_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type_id", DbType="Int")]
		public System.Nullable<int> type_id
		{
			get
			{
				return this._type_id;
			}
			set
			{
				if ((this._type_id != value))
				{
					if (this._T_PERS_TYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontype_idChanging(value);
					this.SendPropertyChanging();
					this._type_id = value;
					this.SendPropertyChanged("type_id");
					this.Ontype_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_change_date", DbType="Date")]
		public System.Nullable<System.DateTime> change_date
		{
			get
			{
				return this._change_date;
			}
			set
			{
				if ((this._change_date != value))
				{
					this.Onchange_dateChanging(value);
					this.SendPropertyChanging();
					this._change_date = value;
					this.SendPropertyChanged("change_date");
					this.Onchange_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PERS_TYPE_T_PERS_TYPE_CHANGE", Storage="_T_PERS_TYPE", ThisKey="type_id", OtherKey="id", IsForeignKey=true)]
		public T_PERS_TYPE T_PERS_TYPE
		{
			get
			{
				return this._T_PERS_TYPE.Entity;
			}
			set
			{
				T_PERS_TYPE previousValue = this._T_PERS_TYPE.Entity;
				if (((previousValue != value) 
							|| (this._T_PERS_TYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_PERS_TYPE.Entity = null;
						previousValue.T_PERS_TYPE_CHANGEs.Remove(this);
					}
					this._T_PERS_TYPE.Entity = value;
					if ((value != null))
					{
						value.T_PERS_TYPE_CHANGEs.Add(this);
						this._type_id = value.id;
					}
					else
					{
						this._type_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_PERS_TYPE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PERSONE_T_PERS_TYPE_CHANGE", Storage="_T_PERSONE", ThisKey="pers_id", OtherKey="id", IsForeignKey=true)]
		public T_PERSONE T_PERSONE
		{
			get
			{
				return this._T_PERSONE.Entity;
			}
			set
			{
				T_PERSONE previousValue = this._T_PERSONE.Entity;
				if (((previousValue != value) 
							|| (this._T_PERSONE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_PERSONE.Entity = null;
						previousValue.T_PERS_TYPE_CHANGEs.Remove(this);
					}
					this._T_PERSONE.Entity = value;
					if ((value != null))
					{
						value.T_PERS_TYPE_CHANGEs.Add(this);
						this._pers_id = value.id;
					}
					else
					{
						this._pers_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_PERSONE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_PERSONE")]
	public partial class T_PERSONE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _phone;
		
		private string _adress;
		
		private string _email;
		
		private string _studey;
		
		private string _woke;
		
		private System.DateTime _in_date;
		
		private bool _is_active;
		
		private string _inviting_pers;
		
		private EntitySet<T_PERS_RATE_KEEP_CHANGE> _T_PERS_RATE_KEEP_CHANGEs;
		
		private EntitySet<T_PERS_FAIL> _T_PERS_FAILs;
		
		private EntitySet<T_PERS_STATE_CHANGE> _T_PERS_STATE_CHANGEs;
		
		private EntitySet<T_PERS_TYPE_CHANGE> _T_PERS_TYPE_CHANGEs;
		
		private EntitySet<T_SOURA_KEEP> _T_SOURA_KEEPs;
		
		private EntitySet<T_SOURA_KEEP> _T_SOURA_KEEPs1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnadressChanging(string value);
    partial void OnadressChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnstudeyChanging(string value);
    partial void OnstudeyChanged();
    partial void OnwokeChanging(string value);
    partial void OnwokeChanged();
    partial void Onin_dateChanging(System.DateTime value);
    partial void Onin_dateChanged();
    partial void Onis_activeChanging(bool value);
    partial void Onis_activeChanged();
    partial void Oninviting_persChanging(string value);
    partial void Oninviting_persChanged();
    #endregion
		
		public T_PERSONE()
		{
			this._T_PERS_RATE_KEEP_CHANGEs = new EntitySet<T_PERS_RATE_KEEP_CHANGE>(new Action<T_PERS_RATE_KEEP_CHANGE>(this.attach_T_PERS_RATE_KEEP_CHANGEs), new Action<T_PERS_RATE_KEEP_CHANGE>(this.detach_T_PERS_RATE_KEEP_CHANGEs));
			this._T_PERS_FAILs = new EntitySet<T_PERS_FAIL>(new Action<T_PERS_FAIL>(this.attach_T_PERS_FAILs), new Action<T_PERS_FAIL>(this.detach_T_PERS_FAILs));
			this._T_PERS_STATE_CHANGEs = new EntitySet<T_PERS_STATE_CHANGE>(new Action<T_PERS_STATE_CHANGE>(this.attach_T_PERS_STATE_CHANGEs), new Action<T_PERS_STATE_CHANGE>(this.detach_T_PERS_STATE_CHANGEs));
			this._T_PERS_TYPE_CHANGEs = new EntitySet<T_PERS_TYPE_CHANGE>(new Action<T_PERS_TYPE_CHANGE>(this.attach_T_PERS_TYPE_CHANGEs), new Action<T_PERS_TYPE_CHANGE>(this.detach_T_PERS_TYPE_CHANGEs));
			this._T_SOURA_KEEPs = new EntitySet<T_SOURA_KEEP>(new Action<T_SOURA_KEEP>(this.attach_T_SOURA_KEEPs), new Action<T_SOURA_KEEP>(this.detach_T_SOURA_KEEPs));
			this._T_SOURA_KEEPs1 = new EntitySet<T_SOURA_KEEP>(new Action<T_SOURA_KEEP>(this.attach_T_SOURA_KEEPs1), new Action<T_SOURA_KEEP>(this.detach_T_SOURA_KEEPs1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(MAX)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adress", DbType="NVarChar(MAX)")]
		public string adress
		{
			get
			{
				return this._adress;
			}
			set
			{
				if ((this._adress != value))
				{
					this.OnadressChanging(value);
					this.SendPropertyChanging();
					this._adress = value;
					this.SendPropertyChanged("adress");
					this.OnadressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(MAX)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studey", DbType="NVarChar(MAX)")]
		public string studey
		{
			get
			{
				return this._studey;
			}
			set
			{
				if ((this._studey != value))
				{
					this.OnstudeyChanging(value);
					this.SendPropertyChanging();
					this._studey = value;
					this.SendPropertyChanged("studey");
					this.OnstudeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_woke", DbType="NVarChar(MAX)")]
		public string woke
		{
			get
			{
				return this._woke;
			}
			set
			{
				if ((this._woke != value))
				{
					this.OnwokeChanging(value);
					this.SendPropertyChanging();
					this._woke = value;
					this.SendPropertyChanged("woke");
					this.OnwokeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_in_date", DbType="Date NOT NULL")]
		public System.DateTime in_date
		{
			get
			{
				return this._in_date;
			}
			set
			{
				if ((this._in_date != value))
				{
					this.Onin_dateChanging(value);
					this.SendPropertyChanging();
					this._in_date = value;
					this.SendPropertyChanged("in_date");
					this.Onin_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_active", DbType="Bit NOT NULL")]
		public bool is_active
		{
			get
			{
				return this._is_active;
			}
			set
			{
				if ((this._is_active != value))
				{
					this.Onis_activeChanging(value);
					this.SendPropertyChanging();
					this._is_active = value;
					this.SendPropertyChanged("is_active");
					this.Onis_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inviting_pers", DbType="NVarChar(MAX)")]
		public string inviting_pers
		{
			get
			{
				return this._inviting_pers;
			}
			set
			{
				if ((this._inviting_pers != value))
				{
					this.Oninviting_persChanging(value);
					this.SendPropertyChanging();
					this._inviting_pers = value;
					this.SendPropertyChanged("inviting_pers");
					this.Oninviting_persChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PERSONE_T_PERS_RATE_KEEP_CHANGE", Storage="_T_PERS_RATE_KEEP_CHANGEs", ThisKey="id", OtherKey="pers_id")]
		public EntitySet<T_PERS_RATE_KEEP_CHANGE> T_PERS_RATE_KEEP_CHANGEs
		{
			get
			{
				return this._T_PERS_RATE_KEEP_CHANGEs;
			}
			set
			{
				this._T_PERS_RATE_KEEP_CHANGEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PERSONE_T_PERS_FAIL", Storage="_T_PERS_FAILs", ThisKey="id", OtherKey="pers_id")]
		public EntitySet<T_PERS_FAIL> T_PERS_FAILs
		{
			get
			{
				return this._T_PERS_FAILs;
			}
			set
			{
				this._T_PERS_FAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PERSONE_T_PERS_STATE_CHANGE", Storage="_T_PERS_STATE_CHANGEs", ThisKey="id", OtherKey="pers_id")]
		public EntitySet<T_PERS_STATE_CHANGE> T_PERS_STATE_CHANGEs
		{
			get
			{
				return this._T_PERS_STATE_CHANGEs;
			}
			set
			{
				this._T_PERS_STATE_CHANGEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PERSONE_T_PERS_TYPE_CHANGE", Storage="_T_PERS_TYPE_CHANGEs", ThisKey="id", OtherKey="pers_id")]
		public EntitySet<T_PERS_TYPE_CHANGE> T_PERS_TYPE_CHANGEs
		{
			get
			{
				return this._T_PERS_TYPE_CHANGEs;
			}
			set
			{
				this._T_PERS_TYPE_CHANGEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PERSONE_T_SOURA_KEEP", Storage="_T_SOURA_KEEPs", ThisKey="id", OtherKey="pers_hafez_id")]
		public EntitySet<T_SOURA_KEEP> T_SOURA_KEEPs
		{
			get
			{
				return this._T_SOURA_KEEPs;
			}
			set
			{
				this._T_SOURA_KEEPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PERSONE_T_SOURA_KEEP1", Storage="_T_SOURA_KEEPs1", ThisKey="id", OtherKey="pers_mustalem_id")]
		public EntitySet<T_SOURA_KEEP> T_SOURA_KEEPs1
		{
			get
			{
				return this._T_SOURA_KEEPs1;
			}
			set
			{
				this._T_SOURA_KEEPs1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_PERS_RATE_KEEP_CHANGEs(T_PERS_RATE_KEEP_CHANGE entity)
		{
			this.SendPropertyChanging();
			entity.T_PERSONE = this;
		}
		
		private void detach_T_PERS_RATE_KEEP_CHANGEs(T_PERS_RATE_KEEP_CHANGE entity)
		{
			this.SendPropertyChanging();
			entity.T_PERSONE = null;
		}
		
		private void attach_T_PERS_FAILs(T_PERS_FAIL entity)
		{
			this.SendPropertyChanging();
			entity.T_PERSONE = this;
		}
		
		private void detach_T_PERS_FAILs(T_PERS_FAIL entity)
		{
			this.SendPropertyChanging();
			entity.T_PERSONE = null;
		}
		
		private void attach_T_PERS_STATE_CHANGEs(T_PERS_STATE_CHANGE entity)
		{
			this.SendPropertyChanging();
			entity.T_PERSONE = this;
		}
		
		private void detach_T_PERS_STATE_CHANGEs(T_PERS_STATE_CHANGE entity)
		{
			this.SendPropertyChanging();
			entity.T_PERSONE = null;
		}
		
		private void attach_T_PERS_TYPE_CHANGEs(T_PERS_TYPE_CHANGE entity)
		{
			this.SendPropertyChanging();
			entity.T_PERSONE = this;
		}
		
		private void detach_T_PERS_TYPE_CHANGEs(T_PERS_TYPE_CHANGE entity)
		{
			this.SendPropertyChanging();
			entity.T_PERSONE = null;
		}
		
		private void attach_T_SOURA_KEEPs(T_SOURA_KEEP entity)
		{
			this.SendPropertyChanging();
			entity.T_PERSONE = this;
		}
		
		private void detach_T_SOURA_KEEPs(T_SOURA_KEEP entity)
		{
			this.SendPropertyChanging();
			entity.T_PERSONE = null;
		}
		
		private void attach_T_SOURA_KEEPs1(T_SOURA_KEEP entity)
		{
			this.SendPropertyChanging();
			entity.T_PERSONE1 = this;
		}
		
		private void detach_T_SOURA_KEEPs1(T_SOURA_KEEP entity)
		{
			this.SendPropertyChanging();
			entity.T_PERSONE1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_SOURA")]
	public partial class T_SOURA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<double> _code;
		
		private string _soura_name;
		
		private string _aya_text;
		
		private System.Nullable<double> _aya_num;
		
		private System.Nullable<double> _soura_num;
		
		private System.Nullable<double> _gozaa_num;
		
		private System.Nullable<double> _robe_num;
		
		private System.Nullable<double> _hezeb_num;
		
		private System.Nullable<double> _page_num;
		
		private EntitySet<T_SOURA_KEEP> _T_SOURA_KEEPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(System.Nullable<double> value);
    partial void OncodeChanged();
    partial void Onsoura_nameChanging(string value);
    partial void Onsoura_nameChanged();
    partial void Onaya_textChanging(string value);
    partial void Onaya_textChanged();
    partial void Onaya_numChanging(System.Nullable<double> value);
    partial void Onaya_numChanged();
    partial void Onsoura_numChanging(System.Nullable<double> value);
    partial void Onsoura_numChanged();
    partial void Ongozaa_numChanging(System.Nullable<double> value);
    partial void Ongozaa_numChanged();
    partial void Onrobe_numChanging(System.Nullable<double> value);
    partial void Onrobe_numChanged();
    partial void Onhezeb_numChanging(System.Nullable<double> value);
    partial void Onhezeb_numChanged();
    partial void Onpage_numChanging(System.Nullable<double> value);
    partial void Onpage_numChanged();
    #endregion
		
		public T_SOURA()
		{
			this._T_SOURA_KEEPs = new EntitySet<T_SOURA_KEEP>(new Action<T_SOURA_KEEP>(this.attach_T_SOURA_KEEPs), new Action<T_SOURA_KEEP>(this.detach_T_SOURA_KEEPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="Float")]
		public System.Nullable<double> code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soura_name", DbType="NVarChar(255)")]
		public string soura_name
		{
			get
			{
				return this._soura_name;
			}
			set
			{
				if ((this._soura_name != value))
				{
					this.Onsoura_nameChanging(value);
					this.SendPropertyChanging();
					this._soura_name = value;
					this.SendPropertyChanged("soura_name");
					this.Onsoura_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aya_text", DbType="NVarChar(255)")]
		public string aya_text
		{
			get
			{
				return this._aya_text;
			}
			set
			{
				if ((this._aya_text != value))
				{
					this.Onaya_textChanging(value);
					this.SendPropertyChanging();
					this._aya_text = value;
					this.SendPropertyChanged("aya_text");
					this.Onaya_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aya_num", DbType="Float")]
		public System.Nullable<double> aya_num
		{
			get
			{
				return this._aya_num;
			}
			set
			{
				if ((this._aya_num != value))
				{
					this.Onaya_numChanging(value);
					this.SendPropertyChanging();
					this._aya_num = value;
					this.SendPropertyChanged("aya_num");
					this.Onaya_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soura_num", DbType="Float")]
		public System.Nullable<double> soura_num
		{
			get
			{
				return this._soura_num;
			}
			set
			{
				if ((this._soura_num != value))
				{
					this.Onsoura_numChanging(value);
					this.SendPropertyChanging();
					this._soura_num = value;
					this.SendPropertyChanged("soura_num");
					this.Onsoura_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gozaa_num", DbType="Float")]
		public System.Nullable<double> gozaa_num
		{
			get
			{
				return this._gozaa_num;
			}
			set
			{
				if ((this._gozaa_num != value))
				{
					this.Ongozaa_numChanging(value);
					this.SendPropertyChanging();
					this._gozaa_num = value;
					this.SendPropertyChanged("gozaa_num");
					this.Ongozaa_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_robe_num", DbType="Float")]
		public System.Nullable<double> robe_num
		{
			get
			{
				return this._robe_num;
			}
			set
			{
				if ((this._robe_num != value))
				{
					this.Onrobe_numChanging(value);
					this.SendPropertyChanging();
					this._robe_num = value;
					this.SendPropertyChanged("robe_num");
					this.Onrobe_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hezeb_num", DbType="Float")]
		public System.Nullable<double> hezeb_num
		{
			get
			{
				return this._hezeb_num;
			}
			set
			{
				if ((this._hezeb_num != value))
				{
					this.Onhezeb_numChanging(value);
					this.SendPropertyChanging();
					this._hezeb_num = value;
					this.SendPropertyChanged("hezeb_num");
					this.Onhezeb_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_num", DbType="Float")]
		public System.Nullable<double> page_num
		{
			get
			{
				return this._page_num;
			}
			set
			{
				if ((this._page_num != value))
				{
					this.Onpage_numChanging(value);
					this.SendPropertyChanging();
					this._page_num = value;
					this.SendPropertyChanged("page_num");
					this.Onpage_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_SOURA_T_SOURA_KEEP", Storage="_T_SOURA_KEEPs", ThisKey="id", OtherKey="soura_id")]
		public EntitySet<T_SOURA_KEEP> T_SOURA_KEEPs
		{
			get
			{
				return this._T_SOURA_KEEPs;
			}
			set
			{
				this._T_SOURA_KEEPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_SOURA_KEEPs(T_SOURA_KEEP entity)
		{
			this.SendPropertyChanging();
			entity.T_SOURA = this;
		}
		
		private void detach_T_SOURA_KEEPs(T_SOURA_KEEP entity)
		{
			this.SendPropertyChanging();
			entity.T_SOURA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_SOURA_EVALUATION")]
	public partial class T_SOURA_EVALUATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<T_SOURA_KEEP> _T_SOURA_KEEPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public T_SOURA_EVALUATION()
		{
			this._T_SOURA_KEEPs = new EntitySet<T_SOURA_KEEP>(new Action<T_SOURA_KEEP>(this.attach_T_SOURA_KEEPs), new Action<T_SOURA_KEEP>(this.detach_T_SOURA_KEEPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_SOURA_EVALUATION_T_SOURA_KEEP", Storage="_T_SOURA_KEEPs", ThisKey="id", OtherKey="evaluation_id")]
		public EntitySet<T_SOURA_KEEP> T_SOURA_KEEPs
		{
			get
			{
				return this._T_SOURA_KEEPs;
			}
			set
			{
				this._T_SOURA_KEEPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_SOURA_KEEPs(T_SOURA_KEEP entity)
		{
			this.SendPropertyChanging();
			entity.T_SOURA_EVALUATION = this;
		}
		
		private void detach_T_SOURA_KEEPs(T_SOURA_KEEP entity)
		{
			this.SendPropertyChanging();
			entity.T_SOURA_EVALUATION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_SOURA_KEEP")]
	public partial class T_SOURA_KEEP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _keep_date;
		
		private System.Nullable<int> _keep_type_id;
		
		private System.Nullable<int> _pers_hafez_id;
		
		private System.Nullable<int> _pers_mustalem_id;
		
		private System.Nullable<int> _soura_id;
		
		private System.Nullable<int> _aya_num;
		
		private System.Nullable<int> _page_num;
		
		private System.Nullable<int> _soura_num;
		
		private string _soura_name;
		
		private System.Nullable<int> _evaluation_id;
		
		private EntityRef<T_PERSONE> _T_PERSONE;
		
		private EntityRef<T_PERSONE> _T_PERSONE1;
		
		private EntityRef<T_SOURA_EVALUATION> _T_SOURA_EVALUATION;
		
		private EntityRef<T_SOURA> _T_SOURA;
		
		private EntityRef<T_SOURA_KEEP_TYPE> _T_SOURA_KEEP_TYPE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onkeep_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onkeep_dateChanged();
    partial void Onkeep_type_idChanging(System.Nullable<int> value);
    partial void Onkeep_type_idChanged();
    partial void Onpers_hafez_idChanging(System.Nullable<int> value);
    partial void Onpers_hafez_idChanged();
    partial void Onpers_mustalem_idChanging(System.Nullable<int> value);
    partial void Onpers_mustalem_idChanged();
    partial void Onsoura_idChanging(System.Nullable<int> value);
    partial void Onsoura_idChanged();
    partial void Onaya_numChanging(System.Nullable<int> value);
    partial void Onaya_numChanged();
    partial void Onpage_numChanging(System.Nullable<int> value);
    partial void Onpage_numChanged();
    partial void Onsoura_numChanging(System.Nullable<int> value);
    partial void Onsoura_numChanged();
    partial void Onsoura_nameChanging(string value);
    partial void Onsoura_nameChanged();
    partial void Onevaluation_idChanging(System.Nullable<int> value);
    partial void Onevaluation_idChanged();
    #endregion
		
		public T_SOURA_KEEP()
		{
			this._T_PERSONE = default(EntityRef<T_PERSONE>);
			this._T_PERSONE1 = default(EntityRef<T_PERSONE>);
			this._T_SOURA_EVALUATION = default(EntityRef<T_SOURA_EVALUATION>);
			this._T_SOURA = default(EntityRef<T_SOURA>);
			this._T_SOURA_KEEP_TYPE = default(EntityRef<T_SOURA_KEEP_TYPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keep_date", DbType="Date")]
		public System.Nullable<System.DateTime> keep_date
		{
			get
			{
				return this._keep_date;
			}
			set
			{
				if ((this._keep_date != value))
				{
					this.Onkeep_dateChanging(value);
					this.SendPropertyChanging();
					this._keep_date = value;
					this.SendPropertyChanged("keep_date");
					this.Onkeep_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keep_type_id", DbType="Int")]
		public System.Nullable<int> keep_type_id
		{
			get
			{
				return this._keep_type_id;
			}
			set
			{
				if ((this._keep_type_id != value))
				{
					if (this._T_SOURA_KEEP_TYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onkeep_type_idChanging(value);
					this.SendPropertyChanging();
					this._keep_type_id = value;
					this.SendPropertyChanged("keep_type_id");
					this.Onkeep_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pers_hafez_id", DbType="Int")]
		public System.Nullable<int> pers_hafez_id
		{
			get
			{
				return this._pers_hafez_id;
			}
			set
			{
				if ((this._pers_hafez_id != value))
				{
					if (this._T_PERSONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpers_hafez_idChanging(value);
					this.SendPropertyChanging();
					this._pers_hafez_id = value;
					this.SendPropertyChanged("pers_hafez_id");
					this.Onpers_hafez_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pers_mustalem_id", DbType="Int")]
		public System.Nullable<int> pers_mustalem_id
		{
			get
			{
				return this._pers_mustalem_id;
			}
			set
			{
				if ((this._pers_mustalem_id != value))
				{
					if (this._T_PERSONE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpers_mustalem_idChanging(value);
					this.SendPropertyChanging();
					this._pers_mustalem_id = value;
					this.SendPropertyChanged("pers_mustalem_id");
					this.Onpers_mustalem_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soura_id", DbType="Int")]
		public System.Nullable<int> soura_id
		{
			get
			{
				return this._soura_id;
			}
			set
			{
				if ((this._soura_id != value))
				{
					if (this._T_SOURA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsoura_idChanging(value);
					this.SendPropertyChanging();
					this._soura_id = value;
					this.SendPropertyChanged("soura_id");
					this.Onsoura_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aya_num", DbType="Int")]
		public System.Nullable<int> aya_num
		{
			get
			{
				return this._aya_num;
			}
			set
			{
				if ((this._aya_num != value))
				{
					this.Onaya_numChanging(value);
					this.SendPropertyChanging();
					this._aya_num = value;
					this.SendPropertyChanged("aya_num");
					this.Onaya_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_num", DbType="Int")]
		public System.Nullable<int> page_num
		{
			get
			{
				return this._page_num;
			}
			set
			{
				if ((this._page_num != value))
				{
					this.Onpage_numChanging(value);
					this.SendPropertyChanging();
					this._page_num = value;
					this.SendPropertyChanged("page_num");
					this.Onpage_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soura_num", DbType="Int")]
		public System.Nullable<int> soura_num
		{
			get
			{
				return this._soura_num;
			}
			set
			{
				if ((this._soura_num != value))
				{
					this.Onsoura_numChanging(value);
					this.SendPropertyChanging();
					this._soura_num = value;
					this.SendPropertyChanged("soura_num");
					this.Onsoura_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soura_name", DbType="NVarChar(MAX)")]
		public string soura_name
		{
			get
			{
				return this._soura_name;
			}
			set
			{
				if ((this._soura_name != value))
				{
					this.Onsoura_nameChanging(value);
					this.SendPropertyChanging();
					this._soura_name = value;
					this.SendPropertyChanged("soura_name");
					this.Onsoura_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_evaluation_id", DbType="Int")]
		public System.Nullable<int> evaluation_id
		{
			get
			{
				return this._evaluation_id;
			}
			set
			{
				if ((this._evaluation_id != value))
				{
					if (this._T_SOURA_EVALUATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onevaluation_idChanging(value);
					this.SendPropertyChanging();
					this._evaluation_id = value;
					this.SendPropertyChanged("evaluation_id");
					this.Onevaluation_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PERSONE_T_SOURA_KEEP", Storage="_T_PERSONE", ThisKey="pers_hafez_id", OtherKey="id", IsForeignKey=true)]
		public T_PERSONE T_PERSONE
		{
			get
			{
				return this._T_PERSONE.Entity;
			}
			set
			{
				T_PERSONE previousValue = this._T_PERSONE.Entity;
				if (((previousValue != value) 
							|| (this._T_PERSONE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_PERSONE.Entity = null;
						previousValue.T_SOURA_KEEPs.Remove(this);
					}
					this._T_PERSONE.Entity = value;
					if ((value != null))
					{
						value.T_SOURA_KEEPs.Add(this);
						this._pers_hafez_id = value.id;
					}
					else
					{
						this._pers_hafez_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_PERSONE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PERSONE_T_SOURA_KEEP1", Storage="_T_PERSONE1", ThisKey="pers_mustalem_id", OtherKey="id", IsForeignKey=true)]
		public T_PERSONE T_PERSONE1
		{
			get
			{
				return this._T_PERSONE1.Entity;
			}
			set
			{
				T_PERSONE previousValue = this._T_PERSONE1.Entity;
				if (((previousValue != value) 
							|| (this._T_PERSONE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_PERSONE1.Entity = null;
						previousValue.T_SOURA_KEEPs1.Remove(this);
					}
					this._T_PERSONE1.Entity = value;
					if ((value != null))
					{
						value.T_SOURA_KEEPs1.Add(this);
						this._pers_mustalem_id = value.id;
					}
					else
					{
						this._pers_mustalem_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_PERSONE1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_SOURA_EVALUATION_T_SOURA_KEEP", Storage="_T_SOURA_EVALUATION", ThisKey="evaluation_id", OtherKey="id", IsForeignKey=true)]
		public T_SOURA_EVALUATION T_SOURA_EVALUATION
		{
			get
			{
				return this._T_SOURA_EVALUATION.Entity;
			}
			set
			{
				T_SOURA_EVALUATION previousValue = this._T_SOURA_EVALUATION.Entity;
				if (((previousValue != value) 
							|| (this._T_SOURA_EVALUATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_SOURA_EVALUATION.Entity = null;
						previousValue.T_SOURA_KEEPs.Remove(this);
					}
					this._T_SOURA_EVALUATION.Entity = value;
					if ((value != null))
					{
						value.T_SOURA_KEEPs.Add(this);
						this._evaluation_id = value.id;
					}
					else
					{
						this._evaluation_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_SOURA_EVALUATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_SOURA_T_SOURA_KEEP", Storage="_T_SOURA", ThisKey="soura_id", OtherKey="id", IsForeignKey=true)]
		public T_SOURA T_SOURA
		{
			get
			{
				return this._T_SOURA.Entity;
			}
			set
			{
				T_SOURA previousValue = this._T_SOURA.Entity;
				if (((previousValue != value) 
							|| (this._T_SOURA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_SOURA.Entity = null;
						previousValue.T_SOURA_KEEPs.Remove(this);
					}
					this._T_SOURA.Entity = value;
					if ((value != null))
					{
						value.T_SOURA_KEEPs.Add(this);
						this._soura_id = value.id;
					}
					else
					{
						this._soura_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_SOURA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_SOURA_KEEP_TYPE_T_SOURA_KEEP", Storage="_T_SOURA_KEEP_TYPE", ThisKey="keep_type_id", OtherKey="id", IsForeignKey=true)]
		public T_SOURA_KEEP_TYPE T_SOURA_KEEP_TYPE
		{
			get
			{
				return this._T_SOURA_KEEP_TYPE.Entity;
			}
			set
			{
				T_SOURA_KEEP_TYPE previousValue = this._T_SOURA_KEEP_TYPE.Entity;
				if (((previousValue != value) 
							|| (this._T_SOURA_KEEP_TYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_SOURA_KEEP_TYPE.Entity = null;
						previousValue.T_SOURA_KEEPs.Remove(this);
					}
					this._T_SOURA_KEEP_TYPE.Entity = value;
					if ((value != null))
					{
						value.T_SOURA_KEEPs.Add(this);
						this._keep_type_id = value.id;
					}
					else
					{
						this._keep_type_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_SOURA_KEEP_TYPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_SOURA_KEEP_TYPE")]
	public partial class T_SOURA_KEEP_TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<T_SOURA_KEEP> _T_SOURA_KEEPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public T_SOURA_KEEP_TYPE()
		{
			this._T_SOURA_KEEPs = new EntitySet<T_SOURA_KEEP>(new Action<T_SOURA_KEEP>(this.attach_T_SOURA_KEEPs), new Action<T_SOURA_KEEP>(this.detach_T_SOURA_KEEPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_SOURA_KEEP_TYPE_T_SOURA_KEEP", Storage="_T_SOURA_KEEPs", ThisKey="id", OtherKey="keep_type_id")]
		public EntitySet<T_SOURA_KEEP> T_SOURA_KEEPs
		{
			get
			{
				return this._T_SOURA_KEEPs;
			}
			set
			{
				this._T_SOURA_KEEPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_SOURA_KEEPs(T_SOURA_KEEP entity)
		{
			this.SendPropertyChanging();
			entity.T_SOURA_KEEP_TYPE = this;
		}
		
		private void detach_T_SOURA_KEEPs(T_SOURA_KEEP entity)
		{
			this.SendPropertyChanging();
			entity.T_SOURA_KEEP_TYPE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_TEST")]
	public partial class T_TEST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _phone;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<int> _pers_state_id;
		
		private System.Nullable<bool> _is_active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void Onpers_state_idChanging(System.Nullable<int> value);
    partial void Onpers_state_idChanged();
    partial void Onis_activeChanging(System.Nullable<bool> value);
    partial void Onis_activeChanged();
    #endregion
		
		public T_TEST()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(MAX)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pers_state_id", DbType="Int")]
		public System.Nullable<int> pers_state_id
		{
			get
			{
				return this._pers_state_id;
			}
			set
			{
				if ((this._pers_state_id != value))
				{
					this.Onpers_state_idChanging(value);
					this.SendPropertyChanging();
					this._pers_state_id = value;
					this.SendPropertyChanged("pers_state_id");
					this.Onpers_state_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_active", DbType="Bit")]
		public System.Nullable<bool> is_active
		{
			get
			{
				return this._is_active;
			}
			set
			{
				if ((this._is_active != value))
				{
					this.Onis_activeChanging(value);
					this.SendPropertyChanging();
					this._is_active = value;
					this.SendPropertyChanged("is_active");
					this.Onis_activeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_USERS")]
	public partial class T_USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<bool> _is_active;
		
		private string _user_name;
		
		private string _pass_word;
		
		private System.Nullable<System.DateTime> _in_date;
		
		private System.Nullable<int> _user_type_id;
		
		private System.Nullable<int> _setting_profile_id;
		
		private System.Nullable<int> _screen_acsess_profile_id;
		
		private EntityRef<T_USERS_TYPE> _T_USERS_TYPE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onis_activeChanging(System.Nullable<bool> value);
    partial void Onis_activeChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void Onpass_wordChanging(string value);
    partial void Onpass_wordChanged();
    partial void Onin_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onin_dateChanged();
    partial void Onuser_type_idChanging(System.Nullable<int> value);
    partial void Onuser_type_idChanged();
    partial void Onsetting_profile_idChanging(System.Nullable<int> value);
    partial void Onsetting_profile_idChanged();
    partial void Onscreen_acsess_profile_idChanging(System.Nullable<int> value);
    partial void Onscreen_acsess_profile_idChanged();
    #endregion
		
		public T_USER()
		{
			this._T_USERS_TYPE = default(EntityRef<T_USERS_TYPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_active", DbType="Bit")]
		public System.Nullable<bool> is_active
		{
			get
			{
				return this._is_active;
			}
			set
			{
				if ((this._is_active != value))
				{
					this.Onis_activeChanging(value);
					this.SendPropertyChanging();
					this._is_active = value;
					this.SendPropertyChanged("is_active");
					this.Onis_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="NVarChar(MAX)")]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass_word", DbType="NVarChar(MAX)")]
		public string pass_word
		{
			get
			{
				return this._pass_word;
			}
			set
			{
				if ((this._pass_word != value))
				{
					this.Onpass_wordChanging(value);
					this.SendPropertyChanging();
					this._pass_word = value;
					this.SendPropertyChanged("pass_word");
					this.Onpass_wordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_in_date", DbType="Date")]
		public System.Nullable<System.DateTime> in_date
		{
			get
			{
				return this._in_date;
			}
			set
			{
				if ((this._in_date != value))
				{
					this.Onin_dateChanging(value);
					this.SendPropertyChanging();
					this._in_date = value;
					this.SendPropertyChanged("in_date");
					this.Onin_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_type_id", DbType="Int")]
		public System.Nullable<int> user_type_id
		{
			get
			{
				return this._user_type_id;
			}
			set
			{
				if ((this._user_type_id != value))
				{
					if (this._T_USERS_TYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_type_idChanging(value);
					this.SendPropertyChanging();
					this._user_type_id = value;
					this.SendPropertyChanged("user_type_id");
					this.Onuser_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_setting_profile_id", DbType="Int")]
		public System.Nullable<int> setting_profile_id
		{
			get
			{
				return this._setting_profile_id;
			}
			set
			{
				if ((this._setting_profile_id != value))
				{
					this.Onsetting_profile_idChanging(value);
					this.SendPropertyChanging();
					this._setting_profile_id = value;
					this.SendPropertyChanged("setting_profile_id");
					this.Onsetting_profile_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_screen_acsess_profile_id", DbType="Int")]
		public System.Nullable<int> screen_acsess_profile_id
		{
			get
			{
				return this._screen_acsess_profile_id;
			}
			set
			{
				if ((this._screen_acsess_profile_id != value))
				{
					this.Onscreen_acsess_profile_idChanging(value);
					this.SendPropertyChanging();
					this._screen_acsess_profile_id = value;
					this.SendPropertyChanged("screen_acsess_profile_id");
					this.Onscreen_acsess_profile_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_USERS_TYPE_T_USER", Storage="_T_USERS_TYPE", ThisKey="user_type_id", OtherKey="id", IsForeignKey=true)]
		public T_USERS_TYPE T_USERS_TYPE
		{
			get
			{
				return this._T_USERS_TYPE.Entity;
			}
			set
			{
				T_USERS_TYPE previousValue = this._T_USERS_TYPE.Entity;
				if (((previousValue != value) 
							|| (this._T_USERS_TYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_USERS_TYPE.Entity = null;
						previousValue.T_USERs.Remove(this);
					}
					this._T_USERS_TYPE.Entity = value;
					if ((value != null))
					{
						value.T_USERs.Add(this);
						this._user_type_id = value.id;
					}
					else
					{
						this._user_type_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_USERS_TYPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_USERS_TYPES")]
	public partial class T_USERS_TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<T_USER> _T_USERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public T_USERS_TYPE()
		{
			this._T_USERs = new EntitySet<T_USER>(new Action<T_USER>(this.attach_T_USERs), new Action<T_USER>(this.detach_T_USERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_USERS_TYPE_T_USER", Storage="_T_USERs", ThisKey="id", OtherKey="user_type_id")]
		public EntitySet<T_USER> T_USERs
		{
			get
			{
				return this._T_USERs;
			}
			set
			{
				this._T_USERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_USERs(T_USER entity)
		{
			this.SendPropertyChanging();
			entity.T_USERS_TYPE = this;
		}
		
		private void detach_T_USERs(T_USER entity)
		{
			this.SendPropertyChanging();
			entity.T_USERS_TYPE = null;
		}
	}
}
#pragma warning restore 1591
